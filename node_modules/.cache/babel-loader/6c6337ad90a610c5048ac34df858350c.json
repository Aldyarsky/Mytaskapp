{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\src\\\\containers\\\\newTask.js\";\nimport React, { Component } from 'react';\nimport TaskForm from '../components/taskForm';\nimport Task from '../components/task';\nimport '../styles/taskForm.css';\n\nvar NewTask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewTask, _Component);\n\n  function NewTask(props) {\n    var _this;\n\n    _classCallCheck(this, NewTask);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewTask).call(this, props));\n    _this.state = {\n      task: null\n    };\n    _this.previewTask = _this.previewTask.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitForm = _this.submitForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewTask, [{\n    key: \"previewTask\",\n    value: function previewTask(task) {\n      this.setState({\n        task: task\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(formData) {\n      var _this2 = this;\n\n      fetch(\"https://uxcandy.com/~shapoval/test-task-backend/create?developer=alexander\", {\n        body: formData,\n        method: \"post\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        if (result.status === 'ok') {\n          _this2.props.history.push('/');\n        } else {\n          alert('Something went wrong: ' + result.message);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var task = this.state.task;\n      return React.createElement(\"div\", {\n        className: \"task-form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(TaskForm, {\n        previewTask: this.previewTask,\n        submitForm: this.submitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), task ? React.createElement(Task, {\n        task: task,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }) : '');\n    }\n  }]);\n\n  return NewTask;\n}(Component);\n\nexport default NewTask;","map":{"version":3,"sources":["C:\\Users\\aldya\\Desktop\\task-list-master\\src\\containers\\newTask.js"],"names":["React","Component","TaskForm","Task","NewTask","props","state","task","previewTask","bind","submitForm","setState","formData","fetch","body","method","then","res","json","result","status","history","push","alert","message"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,wBAAP;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AANe;AAOlB;;;;gCACYF,I,EAAM;AACf,WAAKI,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAJA;AAAD,OAAd;AACH;;;+BACUK,Q,EAAU;AAAA;;AACjBC,MAAAA,KAAK,CAAC,4EAAD,EAA+E;AAChFC,QAAAA,IAAI,EAAEF,QAD0E;AAEhFG,QAAAA,MAAM,EAAE;AAFwE,OAA/E,CAAL,CAGGC,IAHH,CAGQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAHX,EAICF,IAJD,CAIM,UAAAG,MAAM,EAAI;AACZ,YAAGA,MAAM,CAACC,MAAP,KAAkB,IAArB,EAA2B;AACvB,UAAA,MAAI,CAACf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,SAFD,MAEO;AACHC,UAAAA,KAAK,CAAC,2BAA2BJ,MAAM,CAACK,OAAnC,CAAL;AACH;AACJ,OAVD;AAWH;;;6BACQ;AACL,UAAMjB,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKC,WAA5B;AAAyC,QAAA,UAAU,EAAE,KAAKE,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKH,IAAI,GAAG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAyB,EAFlC,CADJ;AAMH;;;;EAjCiBN,S;;AAoCtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport TaskForm from '../components/taskForm';\nimport Task from '../components/task';\nimport '../styles/taskForm.css';\n\nclass NewTask extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            task: null\n        }\n        this.previewTask = this.previewTask.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n    previewTask (task) {\n        this.setState({task})\n    }\n    submitForm(formData) {\n        fetch(\"https://uxcandy.com/~shapoval/test-task-backend/create?developer=alexander\", {\n            body: formData,\n            method: \"post\"\n        }).then(res => res.json())\n        .then(result => {\n            if(result.status === 'ok') {\n                this.props.history.push('/')\n            } else {\n                alert('Something went wrong: ' + result.message);\n            }\n        });\n    }\n    render() {\n        const task = this.state.task;\n        return (\n            <div className=\"task-form-container\">\n                <TaskForm previewTask={this.previewTask} submitForm={this.submitForm}/>\n                {task ? <Task task={task}/> : ''}\n            </div>\n        );\n    }\n}\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}