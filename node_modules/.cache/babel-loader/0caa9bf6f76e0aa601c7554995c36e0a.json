{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\aldya\\\\Desktop\\\\task-list-master\\\\src\\\\AppRouter.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport TaskContainer from './containers/taskContainer';\nimport NewTask from './containers/newTask';\nimport Header from './components/header';\nimport { login } from './utils';\nimport { logout } from './utils';\n\nvar AppRouter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppRouter, _Component);\n\n  function AppRouter(props) {\n    var _this;\n\n    _classCallCheck(this, AppRouter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppRouter).call(this, props));\n    _this.state = {\n      isAdmin: false\n    };\n    _this.processLogin = _this.processLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppRouter, [{\n    key: \"processLogOut\",\n    value: function processLogOut(bool) {\n      var _this2 = this;\n\n      logout(bool).then(function () {\n        _this2.state({\n          isAdmin: false\n        });\n      });\n    }\n  }, {\n    key: \"processLogin\",\n    value: function processLogin(username, password) {\n      var _this3 = this;\n\n      login(username, password).then(function () {\n        _this3.setState({\n          isAdmin: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Header, {\n        processLogin: this.processLogin,\n        isAdmin: this.state.isAdmin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(TaskContainer, Object.assign({}, props, {\n            isAdmin: _this4.state.isAdmin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/new\",\n        component: NewTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AppRouter;\n}(Component);\n\nexport default AppRouter;","map":{"version":3,"sources":["C:\\Users\\aldya\\Desktop\\task-list-master\\src\\AppRouter.js"],"names":["React","Component","BrowserRouter","Route","TaskContainer","NewTask","Header","login","logout","AppRouter","props","state","isAdmin","processLogin","bind","bool","then","username","password","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,MAAT,QAAuB,SAAvB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AALe;AAMlB;;;;kCACaC,I,EAAK;AAAA;;AACdP,MAAAA,MAAM,CAACO,IAAD,CAAN,CAAaC,IAAb,CAAkB,YAAK;AACnB,QAAA,MAAI,CAACL,KAAL,CAAW;AACPC,UAAAA,OAAO,EAAE;AADF,SAAX;AAGJ,OAJA;AAKJ;;;iCACYK,Q,EAAUC,Q,EAAU;AAAA;;AAE7BX,MAAAA,KAAK,CAACU,QAAD,EAAWC,QAAX,CAAL,CAA0BF,IAA1B,CAA+B,YAAM;AACjC,QAAA,MAAI,CAACG,QAAL,CAAc;AACVP,UAAAA,OAAO,EAAE;AADC,SAAd;AAIH,OALD;AAMH;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKC,YAA3B;AAAyC,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE,gBAACF,KAAD;AAAA,iBAAW,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,YAAA,OAAO,EAAE,MAAI,CAACC,KAAL,CAAWC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAEP,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,CADJ,CADJ;AAWH;;;;EArCmBJ,S;;AAwCxB,eAAeQ,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport TaskContainer from './containers/taskContainer';\nimport NewTask from './containers/newTask';\nimport Header from './components/header'\nimport { login } from './utils'\nimport { logout } from './utils'\n\nclass AppRouter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false\n        }\n        this.processLogin = this.processLogin.bind(this);\n    }\n    processLogOut(bool){\n         logout(bool).then(() =>{\n             this.state({\n                 isAdmin: false\n             })  \n        });\n    }\n    processLogin(username, password) {\n       \n        login(username, password).then(() => {\n            this.setState({\n                isAdmin: true\n            });\n\n        })\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"app\">\n                    <Header processLogin={this.processLogin} isAdmin={this.state.isAdmin}/>\n                    <main>\n                        <Route exact path=\"/\" render={(props) => <TaskContainer {...props} isAdmin={this.state.isAdmin} />}/>\n                        <Route path=\"/new\" component={NewTask}/>\n                    </main>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default AppRouter;\n\n"]},"metadata":{},"sourceType":"module"}